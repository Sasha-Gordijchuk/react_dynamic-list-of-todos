{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setVisibleTodos","useState","query","setQuery","status","setStatus","querySelector","toLowerCase","includes","useEffect","filter","todoFilter","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","user","setUser","isLoading","setIsLoading","addUser","a","href","email","name","App","setTodos","visibleTodos","addData","temp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01a2235d.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, completed, title } = todo;\n\n        return (\n          (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={(selectedTodo === todo)\n                ? 'has-background-info-light'\n                : ''}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              {completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"is-vcentered\" />\n                )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={\n                      selectedTodo === todo\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'\n                    }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          )\n        );\n      })}\n\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setVisibleTodos: (todos: Todo[]) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setVisibleTodos }) => {\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n\n  const querySelector = (todo: Todo) => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const todoFilter = () => {\n    switch (status) {\n      case 'completed':\n        setVisibleTodos(todos.filter(todo => (\n          todo.completed\n          && querySelector(todo)\n        )));\n        break;\n      case 'active':\n        setVisibleTodos(todos.filter(todo => (\n          !todo.completed\n          && querySelector(todo)\n        )));\n        break;\n\n      default: setVisibleTodos(todos.filter(todo => (\n        querySelector(todo)\n      )));\n    }\n  };\n\n  useEffect(() => {\n    todoFilter();\n  }, [query, status]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query !== ''\n          && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: (val: null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const addUser = async () => {\n    setUser(await getUser(userId));\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    addUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const addData = async () => {\n    const temp = await getTodos();\n\n    setTodos(temp);\n    setVisibleTodos(temp);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    addData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setVisibleTodos={setVisibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}